language: cpp

dist: trusty
sudo: false

cache:
  directories:
  - ./cget

matrix:
  include:
    - name: "GCC 8 Release"
      os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - ninja-build
            - libfreetype6-dev
            - libboost-dev
      env:
        - CENV_NAME=gcc64r
          CI_C=gcc-8
          CI_CXX=g++-8
          CI_BUILD_TYPE=Release
    - name: "GCC 8 Debug"
      os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - ninja-build
            - libfreetype6-dev
            - libboost-dev
      env:
        - CENV_NAME=gcc64d
          CI_C=gcc-8
          CI_CXX=g++-8
          CI_BUILD_TYPE=Debug
    - name: "Clang 6.0 Release"
      os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - gcc-6
            - g++-6
            - clang-6.0
            - clang-format-6.0
            - clang-tidy-6.0
            - libstdc++-7-dev
            - ninja-build
            - libfreetype6-dev
            - libboost-dev
      env:
        - CENV_NAME=clang64r
          CI_C=clang-6.0
          CI_CXX=clang++-6.0
          CI_BUILD_TYPE=Release
    - name: "Clang 6.0 Debug"
      os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - gcc-6
            - g++-6
            - clang-6.0
            - clang-format-6.0
            - clang-tidy-6.0
            - libstdc++-7-dev
            - ninja-build
            - libfreetype6-dev
            - libboost-dev
      env:
        - CENV_NAME=clang64d
          CI_C=clang-6.0
          CI_CXX=clang++-6.0
          CI_BUILD_TYPE=Debug

install:
  - |
    pip install --user cmake cget

script:
  - |
    set -e
    $CI_CXX --version
    cmake --version
    git submodule update --init --recursive
    set +e
    echo 'Hi Cache! What is in CGET?'
    ls -la cget
    set -e
    cget init --std=c++14 -DCMAKE_C_COMPILER:none=${CI_C} -DCMAKE_CXX_COMPILER:none=${CI_CXX} -DCMAKE_BUILD_TYPE:none=${CI_BUILD_TYPE} -DCMAKE_CXX_STANDARD=14
    cget install TimSimpson/cget-recipes
    cget install libpng
    cget install -f requirements.txt
    mkdir build
    cd build
    cmake -G Ninja -DCMAKE_TOOLCHAIN_FILE=../cget/cget/cget.cmake -H../standalone -B./
    cmake --build ./
    export CTEST_OUTPUT_ON_FAILURE=1
    export PATH=$(pwd)/../cget/lib:${PATH}
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$(pwd)/../cget/lib
    export LP3_ROOT_PATH=$(pwd)/../standalone/media
    ctest

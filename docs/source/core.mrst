~dumpfile "../../core/README.md"

Example
=======

This example shows the basics of setting up a program loop and logging using Lp3::Core:

.. code-block:: c++
~dumpfile "../../core/demos/MainDemo.cpp" 7 ~ 4

Build Info and Options
======================

If you're using CMake, just include core's CMakeLists.txt as a subdirectory. It will export the library Lp3_Core.

Library Options
---------------

LP3_CORE_API_DYNAMIC
    If set, forces library functions to be defined as `__declspec(dllexport)` on Windows. Is set automatically when BUILD_SHARED_LIBS is set.

LP3_COMPILE_LOG_DISABLE
    If set, disables logging even in debug mode. Good if you don't wish to use the built-in logging utilities.


Reference
=========

namespace lp3
-------------



Most code should include `<lp3/core.hpp>` to get access to everything.

Most functionality is defined in the `lp3::core`, though several bits are defined in plain `lp3` instead.

namespace lp3
-------------


~dumpfile "../../core/include/lp3/le.hpp", 4

~dumpfile "../../core/include/lp3/assert.hpp", 4

~dumpfile "../../core/include/lp3/casts.hpp", 4

~dumpfile "../../core/include/lp3/main.hpp", 4

### namespace lp3::core

~dumpfile "../../core/include/lp3/log.hpp", 4

~dumpfile "../../core/include/lp3/core/Exception.hpp", 4

~dumpfile "../../core/include/lp3/core/utils.hpp", 4

### namespace lp3::sdl

~dumpfile "../../core/include/lp3/sdl.hpp", 4
